// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`jest CoursesPages snapshot test 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <MuiThemeProvider>
    <Provider
        navbar={Navbar {}}
        routing={
            RouterStore {
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "history": null,
                "push": [Function],
                "replace": [Function],
              }
        }
    >
        <Unknown />
    </Provider>
</MuiThemeProvider>,
  "nodes": Array [
    <MuiThemeProvider>
      <Provider
            navbar={Navbar {}}
            routing={
                  RouterStore {
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "history": null,
                        "push": [Function],
                        "replace": [Function],
                      }
            }
      >
            <Unknown />
      </Provider>
</MuiThemeProvider>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Unknown>
        <Unknown />
</Unknown>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "children": <Unknown />,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <MuiThemeProvider>
          <Provider
                    navbar={Navbar {}}
                    routing={
                              RouterStore {
                                        "go": [Function],
                                        "goBack": [Function],
                                        "goForward": [Function],
                                        "history": null,
                                        "push": [Function],
                                        "replace": [Function],
                                      }
                    }
          >
                    <Unknown />
          </Provider>
</MuiThemeProvider>,
        "_debugID": 2,
        "_renderedOutput": <MuiThemeProvider>
          <Provider
                    navbar={Navbar {}}
                    routing={
                              RouterStore {
                                        "go": [Function],
                                        "goBack": [Function],
                                        "goForward": [Function],
                                        "history": null,
                                        "push": [Function],
                                        "replace": [Function],
                                      }
                    }
          >
                    <Unknown />
          </Provider>
</MuiThemeProvider>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Unknown>
    <Unknown />
</Unknown>,
}
`;
